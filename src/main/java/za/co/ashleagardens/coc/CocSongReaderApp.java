/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package za.co.ashleagardens.coc;

import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import za.co.ashleagardens.coc.util.PptHelper;

/**
 *
 * @author Deon
 */
public class CocSongReaderApp extends javax.swing.JFrame {

    private static final String VALID_FILE_DESCRIPTION = "Power Point Presentations (.pptx)";
    private static final String VALID_FILE_EXTENSION = "pptx";
    private static final String SONG_CHOOSER_DEFAULT_DIR = "user.home";
    private static final String INVALID_FILE_MESSAGE = "Invalid file type selected. Please select a valid file with a \".pptx\" extension.";

    /**
     * Creates new form CocSongReader
     */
    public CocSongReaderApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cocSongReaderOpenFileBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cocSongReaderMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openFileMenuItem = new javax.swing.JMenuItem();
        closeAppMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ashlea Gardens Song Reader");

        cocSongReaderOpenFileBtn.setText("Open File");
        cocSongReaderOpenFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cocSongReaderOpenFileBtnMouseClicked(evt);
            }
        });

        jLabel1.setText("Select a song to read:");

        jMenu1.setText("File");

        openFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openFileMenuItem.setText("Open File");
        openFileMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openFileMenuItemMouseClicked(evt);
            }
        });
        jMenu1.add(openFileMenuItem);

        closeAppMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        closeAppMenuItem.setText("Close");
        closeAppMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeAppMenuItemMouseClicked(evt);
            }
        });
        jMenu1.add(closeAppMenuItem);

        cocSongReaderMenu.add(jMenu1);

        jMenu2.setText("Help");

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        aboutMenuItem.setText("About");
        aboutMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMenuItemMouseClicked(evt);
            }
        });
        jMenu2.add(aboutMenuItem);

        cocSongReaderMenu.add(jMenu2);

        setJMenuBar(cocSongReaderMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cocSongReaderOpenFileBtn)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cocSongReaderOpenFileBtn))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cocSongReaderOpenFileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cocSongReaderOpenFileBtnMouseClicked
        readSong();
    }//GEN-LAST:event_cocSongReaderOpenFileBtnMouseClicked

    private void openFileMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openFileMenuItemMouseClicked
        readSong();
    }//GEN-LAST:event_openFileMenuItemMouseClicked

    private void closeAppMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeAppMenuItemMouseClicked
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_closeAppMenuItemMouseClicked

    private void aboutMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMenuItemMouseClicked
        JOptionPane.showMessageDialog(this, "In progress");
    }//GEN-LAST:event_aboutMenuItemMouseClicked

    private void readSong() {
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(VALID_FILE_DESCRIPTION, VALID_FILE_EXTENSION);

        fileChooser.setFileFilter(filter);
        fileChooser.setCurrentDirectory(new File(System.getProperty(SONG_CHOOSER_DEFAULT_DIR)));

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (selectedFile != null) {
                String extension = selectedFile.getName().substring(selectedFile.getName().lastIndexOf(".") + 1);
                if (!VALID_FILE_EXTENSION.equals(extension)) {
                    JOptionPane.showMessageDialog(this, INVALID_FILE_MESSAGE);
                } else {
                    try {
                        //Process
                        int numVerses = PptHelper.determineNumVerses(selectedFile);

                        if (numVerses == 0) {

                        } else {

                        }
                    } catch (Exception ex) {
                        if (ex instanceof IOException) {
                            //Something went wrong while working with the file
                        } else {
                            //An unknown exception was thrown
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, INVALID_FILE_MESSAGE);
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CocSongReaderApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CocSongReaderApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CocSongReaderApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CocSongReaderApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    //Windows LAF
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

                    //Cross system LAF
//                    UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                new CocSongReaderApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem closeAppMenuItem;
    private javax.swing.JMenuBar cocSongReaderMenu;
    private javax.swing.JButton cocSongReaderOpenFileBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem openFileMenuItem;
    // End of variables declaration//GEN-END:variables
}
