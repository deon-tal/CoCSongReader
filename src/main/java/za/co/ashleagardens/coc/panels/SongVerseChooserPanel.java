package za.co.ashleagardens.coc.panels;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import za.co.ashleagardens.coc.util.PptUtil;
import za.co.ashleagardens.coc.util.PropertyUtil;

/**
 *
 * @author Deon
 */
public class SongVerseChooserPanel extends javax.swing.JPanel {

    private static final Logger LOGGER = LoggerFactory.getLogger(SongVerseChooserPanel.class);
    private static final String CLASS_NAME = SongVerseChooserPanel.class.getName();
    private static final PptUtil PPT_UTIL = PptUtil.INSTANCE;
    private static final PropertyUtil PROPERTY_UTIL = PropertyUtil.INSTANCE;
    private static final String VALID_FILE_DESCRIPTION = "PowerPoint Presentations (.pptx)";
    private static final String VALID_FILE_EXTENSION = "pptx";
    private static final String INVALID_FILE_MESSAGE = "Invalid file type selected. Please select a valid file with a \".pptx\" extension.";
    private static final String NO_FILE_SELECTED = "No file selected";
    private static final String FILE_EXISTS_MESSAGE = "It seems like the presentation already exists at %s.\nDo you want to continue - the existing file will be overriden?";
    private static final String FILE_MGT_EXCEPTION_MESSAGE = "Something went wrong while working with the file.";
    private static final String UNKNOWN_EXCEPTION_MESSAGE = "An unknown exception was thrown.";
    private static final String SUCCESSFUL_PPT_CREATION_MESSAGE = "PowerPoint presentation with name '%s' successfully created!";

    private final Map<Integer, Boolean> verseSelectionMap;
    private final List<JCheckBox> checkBoxes;
    private File selectedFile;
    private JPanel verseNumContainerParentPanel;

    /**
     * Creates new form SongChooserPanel
     *
     * @param frameSize the size of the frame to which this panel is added to.
     */
    public SongVerseChooserPanel(Dimension frameSize) {
        initComponents();

        setSize(frameSize);
        verseSelectionMap = new HashMap<>();
        checkBoxes = new ArrayList<>();
        setButtonsEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stepOneContainerPanel = new javax.swing.JPanel();
        cocSongReaderOpenFileBtn = new javax.swing.JButton();
        fileSelectedLabel = new javax.swing.JLabel();
        selectedFileNameLabel = new javax.swing.JLabel();
        stepThreeContainerPanel = new javax.swing.JPanel();
        doneBtn = new javax.swing.JButton();
        addTimestampCheckBox = new javax.swing.JCheckBox();
        stepTwoContainerPanel = new javax.swing.JPanel();
        verseContainerPanel = new javax.swing.JPanel();
        defaultTextLabel = new javax.swing.JLabel();
        selectAllBtn = new javax.swing.JButton();
        clearSelectionBtn = new javax.swing.JButton();
        selectLabel = new javax.swing.JLabel();

        stepOneContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("1. Select song")));
        stepOneContainerPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        stepOneContainerPanel.setMaximumSize(new java.awt.Dimension(340, 66));
        stepOneContainerPanel.setMinimumSize(new java.awt.Dimension(340, 66));

        cocSongReaderOpenFileBtn.setText("Open File");
        cocSongReaderOpenFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cocSongReaderOpenFileBtnMouseClicked(evt);
            }
        });

        fileSelectedLabel.setText("File selected:");

        selectedFileNameLabel.setText("No file selected");

        javax.swing.GroupLayout stepOneContainerPanelLayout = new javax.swing.GroupLayout(stepOneContainerPanel);
        stepOneContainerPanel.setLayout(stepOneContainerPanelLayout);
        stepOneContainerPanelLayout.setHorizontalGroup(
            stepOneContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepOneContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepOneContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cocSongReaderOpenFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(stepOneContainerPanelLayout.createSequentialGroup()
                        .addComponent(fileSelectedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedFileNameLabel)))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        stepOneContainerPanelLayout.setVerticalGroup(
            stepOneContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepOneContainerPanelLayout.createSequentialGroup()
                .addComponent(cocSongReaderOpenFileBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(stepOneContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileSelectedLabel)
                    .addComponent(selectedFileNameLabel)))
        );

        stepThreeContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("3. Complete")));
        stepThreeContainerPanel.setMaximumSize(new java.awt.Dimension(350, 71));
        stepThreeContainerPanel.setMinimumSize(new java.awt.Dimension(350, 71));
        stepThreeContainerPanel.setPreferredSize(new java.awt.Dimension(350, 71));
        stepThreeContainerPanel.setRequestFocusEnabled(false);

        doneBtn.setText("Done");
        doneBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doneBtnMouseClicked(evt);
            }
        });

        addTimestampCheckBox.setText("Add timestamp to file name");

        javax.swing.GroupLayout stepThreeContainerPanelLayout = new javax.swing.GroupLayout(stepThreeContainerPanel);
        stepThreeContainerPanel.setLayout(stepThreeContainerPanelLayout);
        stepThreeContainerPanelLayout.setHorizontalGroup(
            stepThreeContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepThreeContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepThreeContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doneBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(stepThreeContainerPanelLayout.createSequentialGroup()
                        .addComponent(addTimestampCheckBox)
                        .addGap(0, 163, Short.MAX_VALUE)))
                .addContainerGap())
        );
        stepThreeContainerPanelLayout.setVerticalGroup(
            stepThreeContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stepThreeContainerPanelLayout.createSequentialGroup()
                .addComponent(addTimestampCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(doneBtn))
        );

        stepTwoContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("2. Selected verses")));
        stepTwoContainerPanel.setMaximumSize(new java.awt.Dimension(350, 159));
        stepTwoContainerPanel.setMinimumSize(new java.awt.Dimension(350, 159));
        stepTwoContainerPanel.setPreferredSize(new java.awt.Dimension(350, 159));

        verseContainerPanel.setEnabled(false);

        defaultTextLabel.setText("No file selected");

        javax.swing.GroupLayout verseContainerPanelLayout = new javax.swing.GroupLayout(verseContainerPanel);
        verseContainerPanel.setLayout(verseContainerPanelLayout);
        verseContainerPanelLayout.setHorizontalGroup(
            verseContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verseContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(defaultTextLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        verseContainerPanelLayout.setVerticalGroup(
            verseContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verseContainerPanelLayout.createSequentialGroup()
                .addComponent(defaultTextLabel)
                .addGap(0, 86, Short.MAX_VALUE))
        );

        selectAllBtn.setText("All");
        selectAllBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                selectAllBtnMousePressed(evt);
            }
        });

        clearSelectionBtn.setText("None");
        clearSelectionBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clearSelectionBtnMousePressed(evt);
            }
        });

        selectLabel.setText("Select:");

        javax.swing.GroupLayout stepTwoContainerPanelLayout = new javax.swing.GroupLayout(stepTwoContainerPanel);
        stepTwoContainerPanel.setLayout(stepTwoContainerPanelLayout);
        stepTwoContainerPanelLayout.setHorizontalGroup(
            stepTwoContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepTwoContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectAllBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearSelectionBtn)
                .addContainerGap(185, Short.MAX_VALUE))
            .addComponent(verseContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        stepTwoContainerPanelLayout.setVerticalGroup(
            stepTwoContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepTwoContainerPanelLayout.createSequentialGroup()
                .addComponent(verseContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(stepTwoContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectAllBtn)
                    .addComponent(clearSelectionBtn)
                    .addComponent(selectLabel)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stepOneContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepThreeContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepTwoContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stepOneContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stepTwoContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stepThreeContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cocSongReaderOpenFileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cocSongReaderOpenFileBtnMouseClicked
        readSong();
    }//GEN-LAST:event_cocSongReaderOpenFileBtnMouseClicked

    private void doneBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneBtnMouseClicked
        String filePathString = PROPERTY_UTIL.getNewPptFolderLocation() + File.separator + selectedFile.getName();

        File newPresentation = new File(filePathString);
        if (!addTimestampCheckBox.isSelected() && newPresentation.exists() && newPresentation.isFile()) {
            int result = JOptionPane.showConfirmDialog((Component) null, String.format(FILE_EXISTS_MESSAGE, newPresentation.getParent()),
                    "PowerPoint presentation already exists!", JOptionPane.OK_CANCEL_OPTION);

            if (result == 0) {
                createNewPresentation();
            }
        } else {
            createNewPresentation();
        }
    }//GEN-LAST:event_doneBtnMouseClicked

    /**
     * Extracted method which creates a presentation with the selected verses.
     */
    private void createNewPresentation() {
        try {
            PPT_UTIL.writePresentationWithSelectedVerses(selectedFile, verseSelectionMap, addTimestampCheckBox.isSelected());
            JOptionPane.showMessageDialog(this, SUCCESSFUL_PPT_CREATION_MESSAGE);
            resetComponents();
        } catch (Exception ex) {
            if (ex instanceof IOException) {
                LOGGER.error(CLASS_NAME + ":createNewPresentation: " + FILE_MGT_EXCEPTION_MESSAGE + " - " + ex.getMessage());
                JOptionPane.showMessageDialog(this, FILE_MGT_EXCEPTION_MESSAGE);
            } else {
                LOGGER.error(CLASS_NAME + ":createNewPresentation: " + UNKNOWN_EXCEPTION_MESSAGE + " - " + ex.getMessage());
                JOptionPane.showMessageDialog(this, UNKNOWN_EXCEPTION_MESSAGE);
            }
        }
    }

    private void selectAllBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectAllBtnMousePressed
        updateCheckBoxes(true);
    }//GEN-LAST:event_selectAllBtnMousePressed

    private void clearSelectionBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearSelectionBtnMousePressed
        updateCheckBoxes(false);
    }//GEN-LAST:event_clearSelectionBtnMousePressed

    /**
     * Utility method that presents a file chooser and works with the user's
     * selection.
     */
    private void readSong() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select a song");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(VALID_FILE_DESCRIPTION, VALID_FILE_EXTENSION);
        fileChooser.setFileFilter(filter);
        fileChooser.setCurrentDirectory(new File(PROPERTY_UTIL.getPptFolderLocation()));

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            if (selectedFile != null) {
                String extension = selectedFile.getName().substring(selectedFile.getName().lastIndexOf(".") + 1);
                if (!VALID_FILE_EXTENSION.equals(extension)) {
                    JOptionPane.showMessageDialog(this, INVALID_FILE_MESSAGE);
                } else {
                    try {
                        //Process
                        selectedFileNameLabel.setText(selectedFile.getName());
                        int numVerses = PPT_UTIL.determineNumVerses(selectedFile);

                        if (numVerses == 0) {
                            JOptionPane.showMessageDialog(this, "0 Verses found, nothing to do.");
                            resetComponents();
                        } else {
                            displayVerseSelection(numVerses);
                        }
                    } catch (Exception ex) {
                        if (ex instanceof IOException) {
                            LOGGER.error(CLASS_NAME + ":readSong: " + FILE_MGT_EXCEPTION_MESSAGE + " - " + ex.getMessage());
                            JOptionPane.showMessageDialog(this, FILE_MGT_EXCEPTION_MESSAGE);
                        } else {
                            LOGGER.error(CLASS_NAME + ":readSong: " + UNKNOWN_EXCEPTION_MESSAGE + " - " + ex.getMessage());
                            JOptionPane.showMessageDialog(this, UNKNOWN_EXCEPTION_MESSAGE);
                        }
                        resetComponents();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, INVALID_FILE_MESSAGE);
            }
        }
    }

    /**
     * Utility method that dynamically adds verse check boxes to a panel based
     * on the number verses passed in as a parameter.
     *
     * @param numVerses the number verses in the song.
     */
    private void displayVerseSelection(int numVerses) {
        defaultTextLabel.setVisible(false);
        setButtonsEnabled(true);

        verseNumContainerParentPanel = new JPanel();
        verseNumContainerParentPanel.setLayout(new BoxLayout(verseNumContainerParentPanel, BoxLayout.Y_AXIS));
        verseNumContainerParentPanel.setSize(150, numVerses * 25);

        for (int i = 1; i <= numVerses; i++) {
            JPanel verseNumContainerPanel = new JPanel();
            verseNumContainerPanel.setLayout(new BoxLayout(verseNumContainerPanel, BoxLayout.X_AXIS));

            final int verseNum = i;
            final JCheckBox checkBox = new JCheckBox("Verse " + i);
            checkBox.setMaximumSize(new Dimension(150, 18));
            checkBox.setAlignmentX(Component.LEFT_ALIGNMENT);
            checkBox.setVisible(true);
            checkBox.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    verseSelectionMap.put(verseNum, checkBox.isSelected());
                }
            });
            checkBox.addItemListener(new ItemListener() {

                @Override
                public void itemStateChanged(ItemEvent e) {
                    verseSelectionMap.put(verseNum, checkBox.isSelected());
                }
            });
            verseNumContainerPanel.add(checkBox);
            checkBoxes.add(checkBox);

            verseSelectionMap.put(verseNum, checkBox.isSelected());

            verseNumContainerPanel.setVisible(true);
            verseNumContainerParentPanel.add(verseNumContainerPanel);
        }

        verseNumContainerParentPanel.setVisible(true);
        verseContainerPanel.add(verseNumContainerParentPanel);
        verseContainerPanel.validate();
        verseContainerPanel.repaint();
    }

    private void resetComponents() {
        verseNumContainerParentPanel.removeAll();
        verseContainerPanel.remove(verseNumContainerParentPanel);
        verseNumContainerParentPanel = null;
        verseContainerPanel.validate();
        verseContainerPanel.repaint();
        setButtonsEnabled(false);
        defaultTextLabel.setVisible(true);
        selectedFileNameLabel.setText(NO_FILE_SELECTED);
    }

    private void setButtonsEnabled(boolean enabled) {
        selectAllBtn.setEnabled(enabled);
        clearSelectionBtn.setEnabled(enabled);
        doneBtn.setEnabled(enabled);
        addTimestampCheckBox.setEnabled(enabled);
    }

    private void updateCheckBoxes(boolean selected) {
        for (JCheckBox checkBox : checkBoxes) {
            checkBox.setSelected(selected);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addTimestampCheckBox;
    private javax.swing.JButton clearSelectionBtn;
    private javax.swing.JButton cocSongReaderOpenFileBtn;
    private javax.swing.JLabel defaultTextLabel;
    private javax.swing.JButton doneBtn;
    private javax.swing.JLabel fileSelectedLabel;
    private javax.swing.JButton selectAllBtn;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JLabel selectedFileNameLabel;
    private javax.swing.JPanel stepOneContainerPanel;
    private javax.swing.JPanel stepThreeContainerPanel;
    private javax.swing.JPanel stepTwoContainerPanel;
    private javax.swing.JPanel verseContainerPanel;
    // End of variables declaration//GEN-END:variables
}
